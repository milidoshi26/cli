const path = require('path');
var version = 'core'
var namespace = 'CredScanSrc'
if (version === 'core') version = 'coreapp';

const baseNetAppPath = path.join(__dirname, '/src/' + namespace + '/bin/Debug/net' + version + '2.0');

process.env.EDGE_USE_CORECLR = 1;
if (version !== 'standard')
    process.env.EDGE_APP_ROOT = baseNetAppPath;

var edge = require('edge-js');
var core = require('@actions/core');

var baseDll = path.join(baseNetAppPath, namespace + '.dll');

var localTypeName = namespace + '.LocalMethods';

var credScanFunction = edge.func({
    assemblyFile: baseDll,
    typeName: localTypeName,
    methodName: 'Invoke'
});

async function credscan(input, scannedResult, enable) {
    return credScanFunction(input, function(error, result) {
        if (error) throw error;
        if (input.toString() !== result.toString()) {
            core.warning('Credentials were found.');
        }
        var strinput = input.toString();
        // console.log("Input string: " + strinput);
        var strlen = strinput.length;
        // if (strinput[strlen - 1] == 0) return input;
        if (!enable) {
            scannedResult.result = strinput;
        } else scannedResult.result = result
            // console.log("ScannedResult.result: " + scannedResult.result);
        return result;
    })
}

async function credscan_no_warning(input, scannedResult, enable) {
    return credScanFunction(input, function(error, result) {
        if (error) throw error;
        var strinput = input.toString();
        // console.log("Input string: " + strinput);
        var strlen = strinput.length;
        // if (strinput[strlen - 1] == 0) return input;
        if (!enable) {
            scannedResult.result = strinput;
        } else scannedResult.result = result
            // console.log("ScannedResult.result: " + scannedResult.result);
        return result;
    })
}


//credscan('Mongo Connection string mongodb://mongodb-example:erSNrY3Ucc3Q1v3JzDbfvRDiwj7n082WikBhX6C0VZa8lddDrqQN2yYiHpNoXhFLcsrOtmsK5bcVPriIWIt8KQ==@example-example.documents.azure.com:10255/store?ssl=true&sslverifycertificate=false&replicaSet=globaldb&connectTimeoutMS=300000&socketTimeoutMS=300000&retryWrites=true');

module.exports = { credscan, credscan_no_warning };